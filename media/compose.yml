version: '3.8'
name: media
services:
  # Plex
  # Personal media server with movies and tv-series
  plex:
    container_name: plex
    image: lscr.io/linuxserver/plex:latest
    restart: unless-stopped
    network_mode: host
    env_file: .env
    environment:
      VERSION: docker
    volumes:
      - ${PLEX_LIBRARY}/config:/config
      - ${MEDIA_VOLUME}/data:/media
    devices:
      - /dev/dri:/dev/dri

  # Transmission
  # A torrent client for downloading media
  transmission:
    container_name: transmission
    image: lscr.io/linuxserver/transmission:latest
    restart: unless-stopped
    env_file: .env
    environment:
      TRANSMISSION_WEB_HOME: /web
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    volumes:
      - ${DOCKER}/transmission/config:/config
      - ${DOCKER}/transmission/web:/web # Transmissinic UI
      - ${MEDIA_VOLUME}/downloads:/downloads

  # qbittorrent:
  #   container_name: qbittorrent
  #   image: lscr.io/linuxserver/qbittorrent:latest
  #   restart: unless-stopped
  #   env_file: .env
  #   # environment:
  #   # - WEBUI_PORT=8080
  #   # - TORRENTING_PORT=6881
  #   volumes:
  #     - ${DOCKER}/qbittorrent:/config
  #     - ${MEDIA_VOLUME}/downloads:/downloads
  #   ports:
  #     - 8080:8080
  #     - 6881:6881
  #     - 6881:6881/udp

  # Overseerr
  # Nice app for requesting new content
  overseerr:
    container_name: overseerr
    image: sctx/overseerr:latest
    restart: unless-stopped
    volumes:
      - ${DOCKER}/overseerr:/app/config
    ports:
      - 5055:5055

  # Radarr
  # A movie collection manager for grabing and downloading movies
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    env_file: .env
    volumes:
      - ${DOCKER}/radarr:/config
      # Media volumes are organized using this guide:
      # https://wiki.servarr.com/docker-guide#consistent-and-well-planned-paths
      - ${MEDIA_VOLUME}:/media
    ports:
      - 7878:7878

  # Sonarr
  # A TV series manager for grabing, sorting and organizing new series
  sonarr:
    container_name: sonarr
    image: lscr.io/linuxserver/sonarr:latest
    restart: unless-stopped
    env_file: .env
    volumes:
      - ${DOCKER}/sonarr:/config
      # Media volumes are organized using this guide:
      # https://wiki.servarr.com/docker-guide#consistent-and-well-planned-paths
      - ${MEDIA_VOLUME}:/media
    ports:
      - 8989:8989

  # Prowlarr
  # Indexer manager/proxy for torrent trackers
  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:latest
    restart: unless-stopped
    volumes:
      - ${DOCKER}/prowlarr:/config
    ports:
      - 9696:9696

  # Bazarr
  # Companion that manages and downloads subtitles based on your requirements
  bazarr:
    container_name: bazarr
    image: lscr.io/linuxserver/bazarr:latest
    restart: unless-stopped
    env_file: .env
    volumes:
      - ${DOCKER}/bazarr:/config
      - ${MEDIA_VOLUME}:/media
    ports:
      - 6767:6767

  # Lingarr
  # Service fot machine translations for  movies and tv-series subtitles
  lingarr:
    container_name: lingarr
    image: lingarr/lingarr:latest
    restart: unless-stopped
    volumes:
      - ${MEDIA_VOLUME}:/media
      - ${DOCKER}/lingarr:/app/config
    ports:
      - 7676:8080

  # Trailarr
  # A tool download and manage trailers for Radarr and Sonarr libraries
  trailarr:
    container_name: trailarr
    image: nandyalu/trailarr:latest
    restart: unless-stopped
    env_file: .env
    environment:
      - WEBUI_DISABLE_AUTH=True
    volumes:
      - ${DOCKER}/trailarr:/config
      - ${MEDIA_VOLUME}:/media
    ports:
      - 7889:7889

  # Maintainerr
  # Cleaning up (un)watched media
  maintainerr:
    container_name: maintainerr
    image: ghcr.io/jorenn92/maintainerr:latest
    restart: unless-stopped
    env_file: .env
    volumes:
      - ${DOCKER}/maintainerr:/opt/data
    ports:
      - 6246:6246

  # Huntarr
  # Continually searches media libraries for missing content and quality upgrades.
  huntarr:
    container_name: huntarr
    image: huntarr/huntarr:latest
    restart: unless-stopped
    env_file: .env
    volumes:
      - ${DOCKER}/huntarr:/config
    ports:
      - 9705:9705

  # Cleanuparr
  # Automatically clean up unwanted, stalled, and malicious downloads from *arr applications.
  cleanuparr:
    image: ghcr.io/cleanuparr/cleanuparr:latest
    container_name: cleanuparr
    restart: unless-stopped
    env_file: .env
    volumes:
      - ${DOCKER}/cleanuparr:/config
      - ${MEDIA_VOLUME}/downloads:/downloads # for monitoring orphaned downloads
    ports:
      - 11011:11011

  # Tautulli
  # A monitoring and tracking tool for Plex Media Server
  tautulli:
    container_name: tautulli
    image: ghcr.io/tautulli/tautulli
    restart: unless-stopped
    env_file: .env
    volumes:
      - ${DOCKER}/tautulli:/config
    ports:
      - 8181:8181

  # Audiobookshelf
  # Self-hosted audiobook and podcast server
  audiobookshelf:
    container_name: audiobookshelf
    image: ghcr.io/advplyr/audiobookshelf:latest
    restart: unless-stopped
    env_file: .env
    volumes:
      - ${DOCKER}/audiobookshelf/config:/config
      - ${DOCKER}/audiobookshelf/metadata:/metadata
      - ${MEDIA_VOLUME}:/media
    ports:
      - 13378:80
