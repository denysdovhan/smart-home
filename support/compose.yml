version: '3.8'
name: support
services:
  # Portainer CE
  # Managing containers via nice web UI
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    restart: unless-stopped
    ports:
      - 8000:8000 # Agent
      - 9000:9000 # Web UI
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKER}/portainer/data:/data

  # Watchtower
  # A solution for automating Docker container base image updates
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: unless-stopped
    environment:
      TZ: ${TZ}
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_WARN_ON_HEAD_FAILURE: 'never'
      WATCHTOWER_NO_STARTUP_MESSAGE: true
      WATCHTOWER_SCHEDULE: '0 0 5 * * 6'
      WATCHTOWER_NOTIFICATIONS: email
      WATCHTOWER_NOTIFICATION_EMAIL_FROM: watchtower@${PUBLIC_DOMAIN}
      WATCHTOWER_NOTIFICATION_EMAIL_TO: ${EMAIL_TO}
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER: ${SMTP_HOST}
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT: ${SMTP_PORT}
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER: ${SMTP_LOGIN}
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD: ${SMTP_TOKEN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # Pocket ID
  # A self-hosted identity provider with focus on Passkeys
  pocket-id:
    image: ghcr.io/pocket-id/pocket-id:v1
    container_name: pocket-id
    restart: unless-stopped
    env_file: .env
    environment:
      APP_URL: https://id.${PUBLIC_DOMAIN}
      TRUST_PROXY: true
      MAXMIND_LICENSE_KEY: ${POCKETID_MAXMIND_LICENSE_KEY}
    ports:
      - 1411:1411
    volumes:
      - ${DOCKER}/pocket-id:/app/data
    healthcheck:
      test: ['CMD', '/app/pocket-id', 'healthcheck']
      interval: 1m30s
      timeout: 5s
      retries: 2
      start_period: 10s

  # Samba
  # Remote access to the file system
  samba:
    container_name: samba
    image: dperson/samba
    restart: unless-stopped
    env_file: .env
    environment:
      USERID: ${PUID}
      GROUPID: ${PGID}
    volumes:
      - ..:/mnt/smart-home
      - ${STORAGE}/media:/mnt/media
    ports:
      - 139:139
      - 445:445
      - 137:137/udp
      - 138:138/udp
    command: >
      samba.sh
        -s "media;/mnt/media;yes;no;no;all"
        -s "smart-home;/mnt/smart-home;yes;no;no;all"
        -u "${SAMBA_USER};${SAMBA_PASSWORD}"

  # Glance
  # A self-hosted dashboard that puts all feeds in one place
  glance:
    container_name: glance
    image: glanceapp/glance
    restart: unless-stopped
    env_file:
      - ../common.env
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./glance:/app/config
      - /mnt:/mnt:ro
    ports:
      - 8888:8080

  # Uptime Kuma
  # A monitoring tool for tracking the uptime of home services
  uptime-kuma:
    container_name: uptime-kuma
    image: louislam/uptime-kuma:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKER}/uptime-kuma:/app/data
    ports:
      - 3001:3001

  # Backrest
  # Web UI and orchestrator for restic backup
  backrest:
    image: garethgeorge/backrest
    container_name: backrest
    restart: unless-stopped
    hostname: backrest
    volumes:
      - ${DOCKER}/backrest/data:/data
      - ${DOCKER}/backrest/config:/config
      - ${DOCKER}/backrest/cache:/cache
      - ..:/mnt/smart-home # Backup itself
      - ${PVE_BACKUPS}:/mnt/pve-backups # Proxmox Backups
      - ${STORAGE}/media/paperless:/mnt/paperless # Paperless Media
    env_file: .env
    environment:
      TZ: ${TZ}
      BACKREST_DATA: /data
      BACKREST_CONFIG: /config/config.json
      XDG_CACHE_HOME: /cache
    ports:
      - 9898:9898
