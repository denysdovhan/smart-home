- id: air_siren_kyiv
  alias: 'Alert: Air Siren in Kyiv'
  description: Оголошення повітряної тривоги у Києві
  trigger:
  - platform: state
    entity_id: binary_sensor.alerts_kyiv_air
    to: 'on'
    from: 'off'
    variables:
      title: Повітряна тривога ⚠️
      messages:
      - Оголошено повітряну тривогу!
      - Увага! Повітряна тривога!
      - У Києві повітряна тривога!
      - Повітряна тривога у Києві!
      - У Києві оголошено повітряну тривогу!
    alias: Початок тривоги у Києві
  - platform: state
    entity_id: binary_sensor.alerts_kyiv_air
    to: 'off'
    from: 'on'
    variables:
      title: "Відбій тривоги \U0001F44C"
      messages:
      - Відбій повітряної тривоги!
      - Відбій тривоги!
      - Кінець повітряної тривоги!
      - Кінець тривоги!
    alias: Відбій тривоги у Києві
  condition:
  - condition: numeric_state
    entity_id: proximity.home
    below: 20
    alias: Хтось з сімʼї перебуває у Києві
    enabled: true
  action:
  - service: script.announcement
    data:
      title: '{{ title }}'
      messages: '{{ messages }}'
      force_speak: true
      notify_data:
        group: air-alerts
        push:
          sound:
            name: default
            critical: 1
    alias: Оголосити початок або відбій тривоги
  mode: single
- id: alarm_triggering
  alias: 'Alarm: Triggering'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.home_occupancy
    - binary_sensor.living_room_movement_sensor_occupancy
    - binary_sensor.bedroom_movement_sensor_occupancy
    - binary_sensor.front_door_sensor_contact
    to: 'on'
    alias: Коли якийсь з сенсорів помічає рух вдома
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: armed_away
    alias: Якщо сигналізація поставлена на охорону
  action:
  - service: alarm_control_panel.alarm_trigger
    target:
      entity_id: alarm_control_panel.home_alarm
    data: {}
    alias: Увімкнути тривогу
- id: alarm_notification
  alias: 'Alarm: Notification for Triggered'
  description: Make an announcement when Alarm is getting triggered
  trigger:
  - platform: state
    entity_id:
    - alarm_control_panel.home_alarm
    to: triggered
  action:
  - service: script.announcement
    data:
      title: "Сигналізація \U0001F6A8"
      messages:
      - Вдома спрацювала сигналізація!
      - Тривога! Вдома виявлено рух!
      - Увага! Спрацювала сигналізація!
      notify_data:
        group: alarm
        entity_id: camera.home_camera
    alias: Announce Alarm is triggered
- id: turn_off_tv_with_playstation
  alias: 'Media: Turn off Samsung TV when PlayStation turns off'
  description: Turn off Samsung TV when PS5 goes to sleep mode
  trigger:
  - platform: state
    entity_id:
    - sensor.playstation_5_activity
    to: none
    for:
      seconds: 5
  condition:
  - condition: state
    entity_id: media_player.apple_tv
    state: standby
  - condition: state
    entity_id: media_player.playstation_5
    state: none
  action:
  - service: media_player.turn_off
    data: {}
    target:
      entity_id: media_player.samsung_tv
- id: magic_cube_actions
  alias: 'System: Magic Cube Actions'
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 34146f7d251656d2b98875571e46a12c
    type: action
    subtype: flip90
    discovery_id: 0x00158d000421472b action_flip90
    id: flip90
  - platform: device
    domain: mqtt
    device_id: 34146f7d251656d2b98875571e46a12c
    type: action
    subtype: flip180
    discovery_id: 0x00158d000421472b action_flip180
    id: flip180
  - platform: device
    domain: mqtt
    device_id: 34146f7d251656d2b98875571e46a12c
    type: action
    subtype: rotate_right
    discovery_id: 0x00158d000421472b action_rotate_right
    id: rotate_right
  - platform: device
    domain: mqtt
    device_id: 34146f7d251656d2b98875571e46a12c
    type: action
    subtype: rotate_left
    discovery_id: 0x00158d000421472b action_rotate_left
    id: rotate_left
  - platform: device
    domain: mqtt
    device_id: 34146f7d251656d2b98875571e46a12c
    type: action
    subtype: shake
    discovery_id: 0x00158d000421472b action_shake
    id: shake
  - platform: device
    domain: mqtt
    device_id: 34146f7d251656d2b98875571e46a12c
    type: action
    subtype: tap
    discovery_id: 0x00158d000421472b action_tap
    id: tap
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: flip90
        alias: flip90
      sequence:
      - service: scene.turn_on
        data:
          entity_id: scene.night_lights
          transition: 1
    - conditions:
      - condition: trigger
        id: flip180
        alias: '"flip180" action'
      sequence:
      - service: scene.turn_on
        data:
          transition: 1
        target:
          entity_id: scene.evening_lights
    - conditions:
      - condition: trigger
        id: rotate_right
        alias: '"rotate_right" action'
      sequence:
      - service: light.turn_on
        data:
          transition: 1
        target:
          entity_id:
          - light.living_room_main_light
    - conditions:
      - condition: trigger
        id: rotate_left
        alias: '"rotate_left" action'
      sequence:
      - service: light.turn_off
        data:
          transition: 1
        target:
          entity_id:
          - light.living_room_main_light
    - conditions:
      - condition: trigger
        id: shake
        alias: '"shake" action'
      sequence:
      - service: scene.turn_on
        data:
          transition: 1
        target:
          entity_id: scene.lights_out
    - conditions:
      - condition: trigger
        id: tap
        alias: '"tap" action'
      sequence:
      - service: input_boolean.toggle
        data: {}
        target:
          entity_id: input_boolean.do_not_disturb
      - service: script.announcement
        data:
          speak: false
          title: "Не турбувати \U0001F4A4"
          messages:
          - Режим «Не турбувати» {{ is_state('input_boolean.do_not_disturb', 'on')
            | iif('увімкнено', 'вимкнено') }}.
          - Режим тиші {{ is_state('input_boolean.do_not_disturb', 'on') | iif('увімкнено',
            'вимкнено') }}.
          - '{{ is_state(''input_boolean.do_not_disturb'', ''on'') | iif(''Увімкнено'',
            ''Вимкнено'') }} режим тиші.'
          notify_data:
            group: system
    alias: Perform an action
- id: home_assistant_release_alert
  alias: 'Alert: Home Assistant Release'
  description: Notify Denys about new Home Assistant releases
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.home_assistant_website_update_available
    to: 'on'
  action:
  - service: script.announcement
    data:
      service: notify.denys
      title: "Оновлення Home Assistant \U0001F389"
      speak: false
      messages:
      - 'Доступна нова версія Home Assistant: {{ states(''sensor.home_assistant_website'')
        }}.'
      - 'Реліз нової версії Home Assistant: {{ states(''sensor.home_assistant_website'')
        }}.'
      - Версія Home Assistant {{ states('sensor.home_assistant_website') }} вже доступна!
      notify_data:
        url: /config/dashboard
        group: system
        actions:
        - action: RELEASE_NOTES
          title: Переглянути зміни
          uri: '{{ state_attr(''sensor.home_assistant_website'', ''release_notes'')
            }}'
    alias: Notify Denys about new HA release
- id: hacs_releases_alert
  alias: 'Alert: HACS Releases'
  description: Notify when new HACS components are released
  trigger:
  - platform: state
    entity_id: sensor.hacs
    variables:
      hacs_updates: '{% for repo in state_attr(''sensor.hacs'', ''repositories'')
        -%}

        • {{ repo.display_name }}: {{ repo.installed_version }} → {{ repo.available_version
        }}

        {% endfor %}'
  condition:
  - condition: numeric_state
    entity_id: sensor.hacs
    above: 0
    alias: There are any updates for hacs
  action:
  - service: script.announcement
    data:
      service: notify.denys
      title: "Оновлення HACS \U0001F389"
      speak: false
      openings:
      - 'Доступні оновлення для {{ states(''sensor.hacs'') }} пакетів в HACS:'
      - 'HACS має {{ states(''sensor.hacs'') }} оновлень:'
      - 'Достуно {{ states(''sensor.hacs'') }} оновлень в HACS:'
      messages:
      - '{{ hacs_updates }}'
      notify_data:
        url: /hacs/entry
        group: system
        tag: hacs-updates
    alias: Announce HACS updates for Denys
- id: home_assistant_start
  alias: 'Alert: Home Assistant Start'
  description: Notify Denys when Home Assistant starts
  trigger:
  - platform: homeassistant
    event: start
  action:
  - service: script.announcement
    data:
      service: notify.denys
      title: "Запуск Home Assistant \U0001F3E1"
      speak: false
      messages:
      - Home Assistant повністю запущено!
      - Home Assistant стартував!
      - Home Assistant готовий до роботи!
      notify_data:
        group: system
        tag: ha-start
    alias: Notify Denys about HA starts
- id: system_peaks
  alias: 'Alert: System Peaks '
  description: Alerts for high server usage, overloading, overheating, disk space
  trigger:
  - platform: numeric_state
    entity_id: sensor.processor_use
    above: 90
    for:
      minutes: 5
    variables:
      openings:
      - Процесор навантажений на {{ trigger.to_state.state }}%.
      - Навантаження на процесор {{ trigger.to_state.state }}%.
      - 'CPU: {{ trigger.to_state.state | int(0) }}%.'
      messages:
      - Складнощі з виконанням поточного завдання.
      - Аномально велике навантаження на процесор.
  - platform: numeric_state
    entity_id: sensor.processor_temperature
    above: 80
    for:
      minutes: 10
    variables:
      openings:
      - Температура процесора {{ trigger.to_state.state }}°С.
      - Процесор нагрівся до {{ trigger.to_state.state }}°С.
      messages:
      - Охолодження процесора не справляється з навантаженням.
  - platform: numeric_state
    entity_id: sensor.memory_use_percent
    above: 90
    for:
      minutes: 1
    variables:
      openings:
      - Оперативна пам’ять заповнена на {{ trigger.to_state.state }}%.
      - Навантаження на оперативну пам’ять {{ trigger.to_state.state }}%.
      - 'RAM: {{ trigger.to_state.state }}%.'
      messages:
      - Складнощі з виконанням поточного завдання.
      - Аномально велике навантаження на процесор.
  - platform: numeric_state
    entity_id: sensor.disk_use_percent
    above: 90
    for:
      minutes: 1
    variables:
      openings:
      - Системний диск заповнений на {{ trigger.to_state.state }}%.
      - Заповнення системного диску {{ trigger.to_state.state }}%.
      messages:
      - Системний диск заповнюється. Потрібно видалити застарілі файли.
      - Аномально велике заповнення системної пам’яті.
  - platform: numeric_state
    id: media_disk
    entity_id: sensor.disk_use_percent_media
    above: 90
    for:
      minutes: 1
    variables:
      openings:
      - Диск медіа заповнений на {{ trigger.to_state.state }}%.
      - Заповнення диску медіа {{ trigger.to_state.state }}%.
      messages:
      - Диск для медіа заповнюється. Потрібно видалити застарілі файли.
      - Занадто багато файлів на диску медіа.
  action:
  - service: script.announcement
    data:
      title: "Системний пік \U0001F525"
      openings: '{{ openings }}'
      messages: '{{ messages }}'
      speak: false
      notify_data:
        url: /lovelace/system
        group: system
    alias: Notify about system peak
  - delay:
      minutes: 10
    alias: Don't send notification too often
- id: aqi_alert
  alias: 'Alert: Bad Air Quality'
  description: Notify when the air quality is bad
  trigger:
  - platform: numeric_state
    entity_id: sensor.outdoor_aqi
    above: 150
    below: 200
    for:
      hours: 0
      minutes: 10
      seconds: 0
    variables:
      title: "Шкідливе повітря \U0001F974"
      openings:
      - 'Рівень якості повітря: {{ trigger.to_state.state | int(0) }} AQI'
      - 'Шкідливе повітря надворі: {{ trigger.to_state.state | int(0) }} AQI'
      - 'Шкідливе повітря: {{ trigger.to_state.state | int(0) }} AQI'
      - '{{ trigger.to_state.state | int(0) }} AQI.'
      messages:
      - Може викликати дискомфорт при диханні.
      - Спричиняє дискомфорт при диханні у здорових людей.
      - Людям із захворюваннями категорично заборонено перебувати на вулиці.
      - Заняття спортом на вулиці заборонені.
  - platform: numeric_state
    entity_id: sensor.outdoor_aqi
    above: 200
    below: 300
    for:
      hours: 0
      minutes: 10
      seconds: 0
    variables:
      title: "Дуже шкідливе повітря \U0001F637"
      openings:
      - 'Рівень якості повітря: {{ trigger.to_state.state | int(0) }} AQI'
      - 'Надворі дуже шкідливе повітря: {{ trigger.to_state.state | int(0) }} AQI'
      - 'Дуже шкідливе повітря: {{ states(''sensor.outdoor_aqi'') | int(0) }} AQI'
      - '{{ trigger.to_state.state | int(0) }} AQI.'
      messages:
      - Може викликати захворювання у здорових людей при тривалому впливі.
      - Людям із захворюваннями категорично заборонено перебувати на вулиці.
      - Ризик інсульту та інфаркту у людей похилого віку.
      - Заняття спортом на вулиці заборонені.
  - platform: numeric_state
    entity_id: sensor.outdoor_aqi
    above: 300
    for:
      hours: 0
      minutes: 10
      seconds: 0
    variables:
      title: Небезпечне повітря ☠️
      openings:
      - 'Рівень якості повітря: {{ trigger.to_state.state | int(0) }} AQI'
      - 'Надворі небезпечне повітря: {{ trigger.to_state.state | int(0) }} AQI'
      - 'Небезпечне повітря: {{ trigger.to_state.state | int(0) }} AQI'
      - '{{ trigger.to_state.state | int(0) }} AQI.'
      messages:
      - Це небезпечно для здоров’я!
      - Залишайтесь вдома!
      - Не виходьте на вулицю!
      - Зачиніть вікна!
      - Серйозний вплив навіть на здорових людей!
      - Може спричинити серйозні наслідки для здоров’я!
      - Людям із захворюваннями категорично заборонено перебувати на вулиці.
      - Існує ризик інсульту та інфаркту!
      - Негативні наслідки навіть під час легкої активності!
  condition:
  - condition: numeric_state
    entity_id: proximity.home
    below: 20
    alias: Someone is in Kyiv
  action:
  - service: script.announcement
    data:
      title: '{{ title }}'
      openings: '{{ openings }}'
      messages: '{{ messages }}'
      notify_data:
        url: /lovelace/city
    alias: Announce bad air quality
  - delay:
      hours: 3
      minutes: 0
      seconds: 0
      milliseconds: 0
    alias: Wait for 3 hours before the next announcement
  mode: single
- id: torrent_completed_notification
  alias: 'Alert: Downloaded Torrents'
  description: Notify about downloaded Transmission torrents
  trigger:
  - platform: event
    event_type: transmission_downloaded_torrent
  action:
  - service: script.announcement
    data:
      title: Transmission ⬇️
      speak: false
      messages:
      - Торрент {{ trigger.event.data.name }} завантажено!
      - Завантажено торрент {{ trigger.event.data.name }}!
      - Торрент {{ trigger.event.data.name }} викачаний!
      - Торрент {{ trigger.event.data.name }} готовий!
      notify_data:
        url: /torrents
        group: system
    alias: Notify about completed torrent
- id: humidifier_no_water
  alias: 'Alert: Humidifier No Water'
  description: Notify when humidifier's water tank is empty
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.air_humidifier_water_tank_empty
    to: 'on'
  action:
  - service: script.announcement
    data:
      title: "Зволожувач \U0001F4A6"
      messages:
      - Наповніть бак зволожувача водою!
      - У зволожувачі закінчилась вода — наберіть нову!
      - Наберіть нової води у зволожувач!
      - Потрібно набрати воду у зволожувач!
      - Зволожувач порожній. Наберіть нової води.
      - Потрібно наповнити бак зволожувача.
      - Бак зволожувача спорожнів.
      notify_data:
        url: /lovelace/bedroom
    alias: Announce Humidifier tank is empty
- id: car_washing_alert
  alias: 'Alert: Car Washing'
  description: Notify when it’s okay or not okay to wash a car
  trigger:
  - platform: state
    entity_id: binary_sensor.car_wash
    to: 'on'
    for:
      hours: 12
    variables:
      title: "Миття авто \U0001F698☀️"
      openings:
      - Найближчими днями очікується хороша погода.
      - Хороша погода найближчі 7 днів.
      - Прогнозується хороша погода!
      - Попереду гарна погода!
      messages:
      - Доречно помити машину.
      - Можна помити авто.
      - Варто поїхати на автомийку.
      - Вдалий час, щоб помити авто.
    alias: When car wash sensor turns on
  - platform: state
    entity_id: binary_sensor.car_wash
    to: 'off'
    for:
      hours: 12
    variables:
      title: "Миття авто \U0001F698\U0001F327"
      openings:
      - Найближчими днями очікується погана погода.
      - Погана погода найближчі 7 днів.
      - Прогнозується погана погода!
      - Попереду дощова погода!
      messages:
      - Утримайтесь від миття авто.
      - Не варто мити авто цими днями.
      - Краще залишити авто брудним.
    alias: When car wash sensor turns off
  action:
  - service: script.announcement
    data:
      speak: false
      title: '{{ title }}'
      openings: '{{ openings }}'
      messages: '{{ messages }}'
      notify_data:
        url: /lovelace/car
        group: car
    alias: 'Announce car washing recommendations '
- id: snow_tire_alert
  alias: 'Alert: Snow/Winter Tires'
  description: Notify when it's time to change car tires
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.snowtire
    to: 'on'
    for:
      hours: 12
      minutes: 0
      seconds: 0
  - platform: state
    entity_id:
    - binary_sensor.snowtire
    to: 'off'
    for:
      hours: 12
      minutes: 0
      seconds: 0
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.snowtire
        state: 'on'
      - alias: Only in the fall
        condition: template
        value_template: '{{ now().month in [9, 10, 11] }}'
      sequence:
      - service: script.announcement
        data:
          speak: false
          title: "Зимові шини \U0001F6DE❄️"
          openings:
          - Найближчими днями погіршення погоди.
          - Скоро настане зима.
          - Зима близько!
          - Попереду погіршення погоди!
          messages:
          - Час перевзути машину на зимові шини.
          - Доречно змінити шини на зимові.
          - Варто поїхати на шиномонтаж для заміни шин.
          notify_data:
            url: /lovelace/car
            group: car
        alias: Announce winter tires
    - conditions:
      - condition: state
        entity_id: binary_sensor.snowtire
        state: 'off'
      - alias: Only in the spring
        condition: template
        value_template: '{{ now().month in [3, 4, 5] }}'
      sequence:
      - service: script.announcement
        data:
          speak: false
          title: "Літні шини \U0001F6DE\U0001F324"
          openings:
          - Найближчими днями стрімке покращення погоди.
          - Літо на носі!
          - Нарешті весна!
          - Попереду покращення погоди!
          messages:
          - Час перевзути машину на літні шини.
          - Доречно змінити шини на літні.
          - Варто поїхати на шиномонтаж для заміни шин.
          notify_data:
            url: /lovelace/car
            group: car
        alias: Announce summer tires
    alias: Announce winter or summer tires
- id: monthly_energy_alert
  alias: 'Alert: Monthly Energy Usage'
  description: Switch energy tariff and notify about the consumption
  trigger:
  - platform: numeric_state
    entity_id: sensor.energy_monthly_total
    below: 0.01
    variables:
      openings:
      - Минулого місяця спожито {{ trigger.from_state.state }}kWh
      - Минулого періоду ви спожили {{ trigger.from_state.state }}kWh
      - Попереднього місяця використано {{ trigger.from_state.state }}kWh
      - Попереднього періоду використано {{ trigger.from_state.state }}kWh
      messages:
      - на {{ state_attr('sensor.monthly_energy_cost', 'last_period') | float(0) |
        round(2) }}₴.
      - за {{ state_attr('sensor.monthly_energy_cost', 'last_period') | float(0) |
        round(2) }}₴.
  - platform: numeric_state
    entity_id: sensor.energy_monthly_total
    above: 250
    variables:
      openings:
      - Спожито понад 250kWh за місяць.
      - Використано більше 250kWh за місяць.
      - Ви використали електрику більше 250kWh за місяць.
      messages:
      - Надалі застосовується вищий тариф.
      - Далі застосовується підвищений тариф.
  action:
  - service: script.announcement
    data:
      title: Електрика ⚡️
      speak: false
      service: notify.denys
      openings: '{{ openings }}'
      messages: '{{ messages }}'
      notify_data:
        url: /energy
    alias: Announce consumed energy
- id: electricity_meter
  alias: 'Energy: Electricity Meter'
  description: Switch tarrifs for energy utility meter
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.night_energy_tariff
  - platform: numeric_state
    id: period_start
    entity_id: sensor.energy_monthly_total
    below: 0.01
    alias: When Energy Monthly Total resets to 0
  - platform: numeric_state
    id: period_finish
    entity_id: sensor.energy_monthly_total
    above: 250
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.night_energy_tariff
        state: 'off'
      - condition: numeric_state
        entity_id: sensor.energy_monthly_total
        below: 250
      sequence:
      - service: select.select_option
        data:
          entity_id: select.energy_monthly
          option: peak
        alias: Select peak tariff
    - conditions:
      - condition: state
        entity_id: binary_sensor.night_energy_tariff
        state: 'on'
      - condition: numeric_state
        entity_id: sensor.energy_monthly_total
        below: 250
      sequence:
      - service: select.select_option
        data:
          entity_id: select.energy_monthly
          option: offpeak
        alias: Select offpeak
    - conditions:
      - condition: state
        entity_id: binary_sensor.night_energy_tariff
        state: 'off'
      - condition: numeric_state
        entity_id: sensor.energy_monthly_total
        above: 250
      sequence:
      - service: select.select_option
        data:
          entity_id: select.energy_monthly
          option: peak_overlimit
        alias: Select peak overlimit
    - conditions:
      - condition: state
        entity_id: binary_sensor.night_energy_tariff
        state: 'on'
      - condition: numeric_state
        entity_id: sensor.energy_monthly_total
        above: 250
      sequence:
      - service: select.select_option
        data:
          entity_id: select.energy_monthly
          option: offpeak_overlimit
        alias: Select offpeak overlimit
    alias: Choose Electricity tariff
- id: sync_living_room_trv_temperature
  alias: 'Climate: Sync Living Room TRV temperature'
  description: ''
  use_blueprint:
    path: denysdovhan/sync_trv_with_external_sensor.yaml
    input:
      valve: climate.living_room_heater
      temp_sensor: sensor.living_room_temperature
- id: sync_bedroom_trv_temperature
  alias: 'Climate: Sync Bedroom TRV temperature'
  description: ''
  use_blueprint:
    path: denysdovhan/sync_trv_with_external_sensor.yaml
    input:
      valve: climate.bedroom_heater
      temp_sensor: sensor.bedroom_temperature
- id: switch_heaters_during_heating_season
  alias: 'Climate: Switch Heaters during Heating Season'
  description: Turn on/off heaters when Heating Season in on
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.heating_season
    not_from:
    - unknown
    - unavailable
    for:
      hours: 12
      minutes: 0
      seconds: 0
  action:
  - if:
    - alias: Start of the Heating Season
      condition: state
      entity_id: binary_sensor.heating_season
      state: 'on'
    - alias: And heaters are still off
      condition: state
      entity_id:
      - climate.living_room_heater
      - climate.bedroom_heater
      state: 'off'
    then:
    - service: climate.set_hvac_mode
      data:
        entity_id:
        - climate.living_room_heater
        - climate.bedroom_heater
        hvac_mode: auto
      alias: Turn Heaters to Auto
    else:
    - alias: Turn Heaters to Off
      service: climate.set_hvac_mode
      data:
        hvac_mode: 'off'
      target:
        entity_id:
        - climate.living_room_heater
        - climate.bedroom_heater
  - alias: Notify about the action
    service: script.announcement
    data:
      title: "Опалення \U0001F525"
      speak: false
      openings:
      - Прогнозується {{ iif(is_state('binary_sensor.heating_season', 'on'), 'похолодання',
        'потепління') }}.
      - Наближається {{ iif(is_state('binary_sensor.heating_season', 'on'), 'холодна',
        'тепла') }} погода.
      - Найближчі 3 дні очікується температура {{ iif(is_state('binary_sensor.heating_season',
        'on'), 'нижче', 'вище') }} 8°C.
      - Температура {{ iif(is_state('binary_sensor.heating_season', 'on'), 'опуститься
        нижче', 'підніметься вище') }} 8°C.
      messages:
      - '{{ iif(is_state(''binary_sensor.heating_season'', ''on''), ''Починаємо'',
        ''Закінчуємо'') }} опалювальний період.'
      - '{{ iif(is_state(''binary_sensor.heating_season'', ''on''), ''Початок'', ''Кінець'')
        }} опалювального сезону.'
      - '{{ iif(is_state(''binary_sensor.heating_season'', ''on''), ''Розпочинаємо'',
        ''Закінчуємо'') }} опалювальний сезон.'
      - '{{ iif(is_state(''binary_sensor.heating_season'', ''on''), ''Вмикаємо'',
        ''Вимикаємо'') }} опалювання вдома.'
      - '{{ iif(is_state(''binary_sensor.heating_season'', ''on''), ''Увімкнено'',
        ''Вимкнено'') }} опалення.'
      notify_data:
        actions:
        - action: '{{ heat_action }}'
          title: Нагріти балкон
        url: /lovelace/balcony
- id: turn_on_balcony_heater
  alias: 'Climate: Turn on Balcony Heater'
  description: Turn on Balcony Heater when it's cold and Desk Lamp or Working Display
    are turned on
  trigger:
  - platform: state
    entity_id: binary_sensor.working_display_connected
    to: 'on'
  - platform: state
    entity_id: light.desk_lamp
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.balcony_comfort_temperature
    to: 'off'
  condition:
  - alias: Turn on only when someone is home
    condition: state
    entity_id: group.family
    state: home
  - condition: state
    entity_id: binary_sensor.balcony_comfort_temperature
    state: 'off'
  - condition: state
    entity_id: climate.balcony_heater
    state: 'off'
  - alias: Either Display or Desk Lamp should be on when the temperature is low
    condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.working_display_connected
      state: 'on'
    - condition: state
      entity_id: light.desk_lamp
      state: 'on'
  action:
  - service: climate.turn_on
    data: {}
    target:
      entity_id: climate.balcony_heater
- id: turn_off_balcony_heater
  alias: 'Climate: Turn off Balcony Heater'
  description: Turn off Balcony Heater when the working display or desk lamp are off
    for some time
  trigger:
  - platform: state
    entity_id:
    - light.desk_lamp
    to: 'off'
    for:
      hours: 0
      minutes: 10
      seconds: 0
    from: 'on'
  - platform: state
    entity_id:
    - binary_sensor.working_display_connected
    to: 'off'
    for:
      hours: 0
      minutes: 10
      seconds: 0
    from: 'on'
  - platform: state
    entity_id:
    - binary_sensor.balcony_comfort_temperature
    to: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition:
  - condition: state
    entity_id: climate.balcony_heater
    state: heat
  - condition: state
    entity_id: binary_sensor.balcony_comfort_temperature
    state: 'on'
    enabled: false
  - condition: state
    entity_id: binary_sensor.working_display_connected
    state: 'off'
  action:
  - service: climate.turn_off
    entity_id: climate.balcony_heater
  - if:
    - condition: state
      entity_id: light.desk_lamp
      state: 'on'
    then:
    - service: light.turn_off
      entity_id: light.desk_lamp
- id: preheat_balcony
  alias: 'Climate: Preheat Balcony for a Workday'
  description: When Denys wakes up, ask if he is going to work on balcony, start heating
    and notify when temperature is comfortable.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.denys_iphone_focus
    to: 'off'
  condition:
  - condition: state
    entity_id: binary_sensor.balcony_comfort_temperature
    state: 'off'
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: state
    entity_id: person.denys
    state: home
  - condition: time
    after: 08:00
    before: '15:00'
  action:
  - alias: Prepare an action variables
    variables:
      heat_action: '{{ ''HEAT_'' ~ context.id }}'
      delay_minutes: '{{ range(1, 30) | random }}'
  - alias: Wait for some time after wake up
    delay:
      minutes: '{{ delay_minutes }}'
  - alias: Send an actionable notification
    service: script.announcement
    data:
      service: notify.denys
      title: "Робоче місце \U0001F5A5"
      speak: false
      openings:
      - На балконі {{ states('sensor.balcony_conditions_sensor_temperature') | round(1)
        }}°C.
      - Температура на балконі {{ states('sensor.balcony_conditions_sensor_temperature')
        | round(1) }}°C.
      - Зараз на балконі {{ states('sensor.balcony_conditions_sensor_temperature')
        | round(1) }}°C.
      messages:
      - Хочете увімкнути обігрів?
      - Нагріти балкон для роботи?
      - Увімкнути обігрівач?
      - Нагріти до комфортної температури?
      - Підігріти комфортної температури?
      notify_data:
        actions:
        - action: '{{ heat_action }}'
          title: Нагріти балкон
        url: /lovelace/balcony
  - alias: Wait for notification to be pressed
    wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: '{{ heat_action }}'
      alias: When heat button is pressed in notification
    timeout: '12:00:00'
    continue_on_timeout: false
  - alias: Start heating the balcony
    service: climate.turn_on
    entity_id: climate.balcony_heater
  - alias: Wait to heat up
    wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.balcony_comfort_temperature
      to: 'on'
    timeout: '6:00:00'
    continue_on_timeout: false
  - alias: Notify about comfort temperature
    service: script.announcement
    data:
      service: notify.denys
      title: "Робоче місце \U0001F5A5"
      speak: false
      openings:
      - Можна йти працювати.
      - Балкон готовий до роботи.
      - Робоче місце нагріте до комфортної темпертарури.
      - Робоче місце готове.
      messages:
      - На балконі {{ states('sensor.balcony_conditions_sensor_temperature') | round(1)
        }}°C.
      - 'Температура: {{ states(''sensor.balcony_conditions_sensor_temperature'')
        | round(1) }}°C.'
      - Зараз на балконі {{ states('sensor.balcony_conditions_sensor_temperature')
        | round(1) }}°C.
      notify_data:
        url: /lovelace/balcony
- id: turn_on_lights_on_sunset
  alias: 'Light: Turn on lights on Sunset'
  description: Turn on lights when sun goes below the horizon
  trigger:
  - platform: state
    entity_id:
    - sun.sun
    to: below_horizon
  condition:
  - condition: state
    entity_id: group.family
    state: home
  - condition: state
    entity_id: light.living_room_lights
    state: 'off'
  - condition: state
    entity_id: light.bedroom_lights
    state: 'off'
  action:
  - service: scene.turn_on
    data:
      transition: 5
    target:
      entity_id: scene.evening_lights
  - service: script.announcement
    data:
      notify: false
      openings:
      - Вечоріє.
      - Вечір надворі.
      - Скоро стемніє.
      - Сонечко зайшло за обрій.
      - Скоро вдома стане темно.
      - Сонце опустилось за обрій.
      messages:
      - Зробимо вдома світліше.
      - Нехай буде світло.
      - Доречно увімкнути світло.
      - Вмикаємо світло.
      - Вмикаю світло.
      - Час увімкнути світло.
      - Вмикаю для вас світло.
      - Вмикаю вечірнє світло.
      service: notify.all
      speak: true
      force_speak: false
      notify_data:
        url: /localave/home
    alias: Announce lights
- id: turn_on_lights_on_low_illuminance
  alias: 'Light: Turn on lights on low illuminance'
  description: Turn on lights on low illuminance
  trigger:
  - platform: numeric_state
    entity_id: sensor.living_room_movement_sensor_illuminance_lux
    below: 10
  - platform: numeric_state
    entity_id: sensor.bedroom_movement_sensor_illuminance_lux
    below: 5
  condition:
  - condition: state
    entity_id: group.family
    state: home
  - condition: state
    entity_id: sun.sun
    state: above_horizon
  - condition: state
    entity_id: light.living_room_lights
    state: 'off'
  - condition: state
    entity_id: light.bedroom_lights
    state: 'off'
  - condition: time
    after: '15:00:00'
    before: '22:00:00'
    alias: Activate only after noon till night
  action:
  - service: scene.turn_on
    data:
      transition: 5
    target:
      entity_id:
      - scene.evening_lights
  - service: script.announcement
    data:
      notify: false
      openings:
      - Здається вдома надто темно.
      - Вдома занадто темно.
      - Стемніло.
      - Сонце сховалось за хмарами.
      - Надто темно.
      - Вдома за темно.
      messages:
      - Доречно увімкнути світло.
      - Увімкну для вас світло.
      - Краще увімкнути світло.
      - Не будемо псувати очі.
      - Вмикаю для вас світло.
      - Вмикаємо світло.
      - Вмикаю світло.
      - Час увімкнути світло.
      service: notify.all
      speak: true
      force_speak: false
      notify_data:
        url: /localave/home
    alias: Announce low illuminance on speakers
- id: turn_on_corridor_light_when_door_is_open
  alias: 'Light: Turn on Corridor Light when Door is open'
  description: Turn on Corridor Light when Front Door opens and then turn it off after
    a few minutes
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.front_door_sensor_contact
    to: 'on'
  action:
  - alias: Turn on Corridor Light
    service: light.turn_on
    entity_id: light.corridor_light
  - alias: Wait for some time
    delay:
      hours: 0
      minutes: 7
      seconds: 0
      milliseconds: 0
  - alias: Turn off Corridor Light
    service: light.turn_off
    entity_id: light.corridor_light
  mode: restart
- id: turn_off_corridor_light_when_door_is_closed
  alias: 'Light: Turn off Corridor Light When Door is Closed'
  description: Turn off Corridor Light when Front Door closes. If the light is still
    on, then send a notification with an action to turn off the light.
  trigger:
  - platform: state
    entity_id:
    - light.corridor_light
    to: 'on'
  action:
  - wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.front_door_sensor_contact
      from: 'on'
      to: 'off'
    timeout:
      hours: 0
      minutes: 20
      seconds: 0
      milliseconds: 0
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger is not none }}'
        alias: When Front Door was closed
      sequence:
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.corridor_light
    default:
    - condition: state
      entity_id: light.corridor_light
      state: 'on'
    - variables:
        turn_off_corridor_light: '{{ ''TURN_OFF_CORRIDOR_LIGHT'' ~ context.id }}'
      alias: Define action for notification
    - service: script.announcement
      data:
        title: "Світло у коридорі \U0001F4A1"
        speak: false
        openings:
        - Світло у коридорі горить вже 15 хвилин.
        - Світло у коридорі досі горить.
        - Досі горить світло у коридорі.
        messages:
        - Вимкнути?
        - Натисніть і потримайте на сповіщення, щоб вимкнути.
        - Глибоке натискання на сповіщення, щоб вимкнути.
        - Натисніть, щоб вимкнути.
        notify_data:
          actions:
          - action: '{{ turn_off_corridor_light }}'
            title: Вимкнути світло
          url: /lovelace/living_room
      alias: Announce Corridor light is still on
    - wait_for_trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: '{{ turn_off_corridor_light }}'
        alias: Turn off Corridor Light action
      timeout:
        hours: 1
      continue_on_timeout: false
    - service: light.turn_off
      data: {}
      target:
        entity_id: light.corridor_light
    alias: Turn off Corridor Light immediately, or notify it's still on
  mode: restart
- id: toggle_desk_lamp_with_external_display
  alias: 'Light: Toggle Desk Lamp with Working Display'
  description: Sync Desk lamp with Working Display
  trigger:
  - platform: state
    entity_id: binary_sensor.working_display_connected
    not_from:
    - unknown
    - unavailable
    to:
    - 'on'
    - 'off'
  action:
  - alias: Toggle Desk Lamp
    service: light.turn_{{ trigger.to_state.state }}
    entity_id: light.desk_lamp
- id: do_not_disturb
  alias: 'Mode: Do Not Disturb Activation'
  description: Adjust devices to Do Not Disturb mode
  trigger:
  - platform: homeassistant
    event: start
  - platform: state
    entity_id:
    - input_boolean.do_not_disturb
  condition:
  - condition: state
    entity_id: group.family
    state: home
  action:
  - service: script.do_not_disturb_mode
    data: {}
  mode: queued
- id: do_not_disturb_on_focus
  alias: 'Mode: Do Not Disturb on Focus'
  description: Switch Do Not Disturb while camera, mic or focus are on
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.do_not_disturb_family
    for:
      seconds: 30
  condition:
  - condition: state
    entity_id: group.family
    state: home
  action:
  - service: input_boolean.turn_{{ trigger.to_state.state }}
    entity_id: input_boolean.do_not_disturb
    alias: Toggle Do Not Disturb input boolean
  mode: queued
- id: away
  alias: 'Mode: Away Flow'
  description: Toggle Away mode depending on the Away input boolean
  trigger:
  - platform: state
    entity_id:
    - input_boolean.away
  action:
  - service: script.away_mode
    data: {}
- id: away_on_leaving_city
  alias: 'Mode: Away on Leaving City'
  description: Toggle Away mode depending on proximity to the Kyiv city
  trigger:
  - platform: numeric_state
    entity_id: proximity.home
    above: 20
    variables:
      service: input_boolean.turn_on
    enabled: true
    alias: Everyone leaves Kyiv
  - platform: numeric_state
    entity_id: proximity.home
    below: 20
    variables:
      service: input_boolean.turn_off
    enabled: true
    alias: Everyone arrives to Kyiv
  action:
  - alias: Switch Away mode depending on the travel direction
    service: '{{ service }}'
    entity_id: input_boolean.away
- id: away_presence_simulation
  alias: 'Light: Presence Simulation in Away Mode'
  description: Toggle Presence Simulation during Night in Away Mode
  trigger:
  - platform: state
    entity_id:
    - sun.sun
    enabled: true
  condition:
  - condition: state
    entity_id: input_boolean.away
    state: 'on'
  action:
  - choose:
    - conditions:
      - alias: Only when Sun is below the horizon
        condition: state
        entity_id: sun.sun
        state: below_horizon
      sequence:
      - alias: Start Presence Simulation
        service: presence_simulation.start
        data: {}
    default:
    - alias: Stop Presence Simulation
      service: presence_simulation.stop
      data: {}
    alias: Toggle presence simulation
- id: everyone_is_arriving
  alias: 'Flow: Everyone is Arriving'
  description: Turn on things when people are arriving
  trigger:
  - platform: state
    entity_id: group.family
    from: not_home
    to: home
  condition:
  - alias: Do not turn on when the lights are on
    condition: state
    entity_id: light.lights
    state: 'off'
    enabled: false
  - alias: No motion detected home
    condition: state
    entity_id: binary_sensor.home_occupancy
    state: 'off'
  action:
  - alias: Wait for someone to come
    wait_for_trigger:
    - platform: state
      entity_id: binary_sensor.front_door_sensor_contact
      to: 'on'
    - platform: state
      entity_id:
      - binary_sensor.home_occupancy
      to: 'on'
    timeout:
      hours: 2
    continue_on_timeout: false
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: sun.sun
        state: below_horizon
      - condition: numeric_state
        entity_id: sensor.living_room_movement_sensor_illuminance_lux
        below: 30
      - condition: numeric_state
        entity_id: sensor.bedroom_movement_sensor_illuminance_lux
        below: 10
    then:
    - service: scene.turn_on
      data:
        entity_id: scene.evening_lights
        transition: 5
    alias: Turn on Lights when its dark
  - alias: Turn on Air Purifier
    service: fan.turn_on
    data: {}
    target:
      entity_id: fan.air_purifier
  - if:
    - condition: state
      entity_id: binary_sensor.sleeping_time
      state: 'on'
    then:
    - alias: Turn on Air Humidifier
      service: humidifier.turn_on
      entity_id: humidifier.air_humidifier
    alias: Turn on Humidifier at night
  - alias: Wait a second for everyone to come in
    delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
    enabled: true
  - alias: Greet people
    service: script.greeting
    data: {}
  - alias: Wait for a phrase to be said
    delay:
      minutes: 1
  - alias: Set device to correct state of DND
    service: script.do_not_disturb_mode
    data: {}
  mode: restart
- id: everyone_is_leaving
  alias: 'Flow: Everyone is Leaving'
  description: Turn off things when people are leaving
  trigger:
  - platform: state
    entity_id: group.family
    from: home
    to: not_home
    for:
      minutes: 10
  condition:
  - alias: Do not trigger when movement at home is detected
    condition: state
    entity_id: binary_sensor.home_occupancy
    state: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  action:
  - alias: Turn off Air Pufirier
    service: fan.turn_off
    entity_id: fan.air_purifier
  - alias: Turn off Air Humidifier
    service: humidifier.turn_off
    entity_id: humidifier.air_humidifier
  - alias: Turn off all the lights
    service: light.turn_off
    entity_id: all
  - alias: Turn off ACs and Balcony heater
    service: climate.turn_off
    entity_id:
    - climate.living_room_ac
    - climate.bedroom_ac
    - climate.balcony_heater
  - alias: Turn off all Media Players
    service: media_player.turn_off
    entity_id: all
  - alias: Ask for cleaning when appropriate
    choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.time_to_clean
        state: 'on'
      - condition: state
        entity_id: vacuum.roborock
        state: docked
      sequence:
      - service: script.announcement
        data:
          speak: false
          title: "Пилосос \U0001F9F9"
          messages:
          - Пора почати регулярне прибирання.
          - Час прибирати вдома.
          - Бажаєте прибрати вдома?
          - Почати прибирання?
          - '{{ state_attr(''vacuum.roborock'', ''friendly_name'') }} пропонує домашнє
            прибирання.'
          - '{{ state_attr(''vacuum.roborock'', ''friendly_name'') }} хоче прибирати
            квартиру.'
          - '{{ state_attr(''vacuum.roborock'', ''friendly_name'') }} давно не прибирав.
            Почати?'
          notify_data:
            url: /lovelace/vacuum
            group: vacuum
            tag: vacuum-cleaning
            actions:
            - action: VACUUM_START
              title: Почати прибирання
              activationMode: background
              authenticationRequired: true
- id: vacuum_regular_cleaning
  alias: 'Vacuum: Ask Regular Cleaning'
  description: Regular vacuum cleaning every two days
  trigger:
  - platform: time_pattern
    hours: /4
    minutes: 0
    seconds: 0
    alias: Every 4 hours
  condition:
  - alias: Robot is docked
    condition: state
    entity_id: vacuum.roborock
    state: docked
  - alias: It's working day
    condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - alias: Only during activity time
    condition: state
    entity_id: binary_sensor.activity_time
    state: 'on'
  - alias: Do Not Disturb mode is off
    condition: state
    entity_id: input_boolean.do_not_disturb
    state: 'off'
  - alias: Time for cleaning or last cleaning was short
    condition: state
    entity_id: binary_sensor.time_to_clean
    state: 'on'
  - alias: We are not out of the city
    condition: numeric_state
    entity_id: proximity.home
    below: 25
  action:
  - service: script.announcement
    data:
      speak: false
      title: "Пилосос \U0001F9F9"
      messages:
      - Пора почати регулярне прибирання.
      - Час прибирати вдома.
      - Бажаєте прибрати вдома?
      - Вдома давно не прибирали. Почати прибирання?
      - Пилосос пропонує домашнє прибирання.
      - Робот хоче прибирати квартиру.
      - Пилосос давно не прибирав. Почати?
      notify_data:
        url: /lovelace/vacuum
        group: vacuum
        tag: vacuum-cleaning
        actions:
        - action: VACUUM_START
          title: Почати прибирання
          activationMode: background
          authenticationRequired: true
        - action: VACUUM_START_GENTLE
          title: Почати тихе прибирання
          activationMode: background
          authenticationRequired: true
    alias: Ask for cleaning
- id: vacuum_finish_cleaning
  alias: 'Vacuum: Stop cleaning when we return home'
  description: Send vacuum home when somebody comes home
  trigger:
  - platform: state
    entity_id: group.family
    from: not_home
    to: home
  condition:
  - alias: Send vacuum home only when it's cleaning
    condition: state
    entity_id: vacuum.roborock
    state: cleaning
  action:
  - service: vacuum.return_to_base
    data: {}
    target:
      entity_id: vacuum.roborock
- id: vacuum_finish_notification
  alias: 'Vacuum: Finish Alert'
  description: Notify when vacuum finished cleaning and we are not home.
  trigger:
  - platform: state
    entity_id: vacuum.roborock
    from: cleaning
    to: returning
  condition:
  - condition: state
    entity_id: group.family
    state: not_home
  action:
  - service: script.announcement
    data:
      speak: false
      title: "Пилосос \U0001F9F9"
      openings:
      - Прибирання закінчено!
      - Робот прибрав квартиру!
      - Робот все прибрав!
      - Тепер вдома чисто!
      - Робот виконав своє завдання.
      - Робот закінчив з прибиранням.
      messages:
      - Повертаємось на базу!
      - Намагайтесь підтримувати порядок!
      - Пам'ятайте, що чисто не там, де прибирають, а там де не смітять!
      - Подякуйте роботу за прибирання — він старався для вас.
      notify_data:
        group: vacuum
        url: /lovelace/vacuum
    alias: Notify about finished cleaning
- id: vacuum_error_notification
  alias: 'Vacuum: Error Alert'
  description: Notify when error with vacuum occured
  trigger:
  - platform: state
    entity_id:
    - vacuum.roborock
    to: error
  action:
  - service: script.announcement
    data:
      speak: false
      title: "Пилосос \U0001F9F9"
      openings:
      - Ой! Проблема з роботом!
      - Увага! Проблема з пилососом!
      - Халепа! Робот зіткнувся з помилкою!
      - Виникла непередбачувана ситуація з роботом:
      notify_data:
        group: vacuum
        url: /lovelace/vacuum
      messages:
      - '{{ state_attr(''vacuum.roborock'', ''error'') }}'
- id: vacuum_ask_maintenance
  alias: 'Vacuum: Ask Maintenance'
  description: Send vacuum near trash bin and ask for maintenance
  trigger:
  - platform: state
    entity_id:
    - vacuum.roborock
    to: returning
  condition:
  - alias: Every 5th cleaning
    condition: template
    value_template: '{{ states(''sensor.roborock_total_clean_count'') | int(1) % 5
      == 0 }}

      '
  - alias: And there was at least one cleaning after previous maintenance
    condition: template
    value_template: '{% set last_maintenance = as_timestamp(state_attr(''automation.vacuum_maintenance'',
      ''last_triggered''), 0) %}

      {% set last_cleaning = as_timestamp(states(''sensor.roborock_last_clean_start''),
      0) %}

      {{ last_cleaning > last_maintenance }}

      '
  action:
  - service: script.announcement
    data:
      title: "Пилосос \U0001F9F9"
      openings:
      - Потрібно обслужити пилосос.
      - Час обслуговування пилососа.
      - Робот трудився для вас, а тепер потребує вашої уваги.
      - Пилосос потребує піклування про себе.
      - Пилосос просить про обслуговування.
      messages:
      - Почистіть ганчірку та наберати свіжої води.
      - Викиньте сміття та наберіть нової води.
      - Викиньте сміття, наберіть води і почистіть ганчірку.
      - Почистіть його та наберіть нової води у бак!
      - Наберіть води та почистіть його!
      notify_data:
        url: /lovelace/vacuum
        group: vacuum
        actions:
        - identifier: VACUUM_PAUSE
          title: Пауза
          activationMode: background
        - identifier: VACUUM_RETURN_TO_BASE
          title: На базу
          activationMode: background
          destructive: true
      speak: false
    alias: Announce vacuum maintenance
  - delay:
      seconds: 5
  - service: script.vacuum_maintenance
    data: {}
- id: vacuum_replacements
  alias: 'Vacuum: Replacements Alert'
  description: Notify when vacuum parts need to be replaced
  trigger:
  - platform: numeric_state
    entity_id: sensor.roborock_main_brush_left
    below: 3600
    variables:
      openings:
      - Головна щітка пилососа потребує заміни.
      - Потрібно замінити основну щітку пилососа.
      - Замініть основну щітку пилососа.
      messages:
      - Не забудьте обнулити лічильник після заміни та замовити нову щітку.
      - Обнуліть лічильник після заміни та замовте нову щітку.
  - platform: numeric_state
    id: side_brush
    entity_id: sensor.roborock_side_brush_left
    below: 3600
    variables:
      openings:
      - Бокова щітка пилососа потребує заміни.
      - Потрібно замінити бокову щітку пилососа.
      - Замініть бокову щітку пилососа.
      messages:
      - Не забудьте обнулити лічильник після заміни та замовити нову щітку.
      - Обнуліть лічильник після заміни та замовте нову щітку.
  - platform: numeric_state
    id: filter
    entity_id: sensor.roborock_filter_left
    below: 3600
    variables:
      openings:
      - Основний фільтр пилососа потребує заміни.
      - Потрібно замінити фільтр пилососа.
      - Замініть фільтр пилососа.
      messages:
      - Не забудьте обнулити лічильник після заміни та замовити новий фільтр.
      - Обнуліть лічильник після заміни та замовте новий фільтр.
  - platform: numeric_state
    id: sensor_dirty
    entity_id: sensor.roborock_sensor_dirty_left
    below: 3600
    variables:
      openings:
      - Сенсори орієнтації пилососа забруднились.
      - Потрібно очистити сенсори пилососа.
      - Очистіть сенсори пилососа.
      messages:
      - Не забудьте обнулити лічильник після очищення.
      - Обнуліть лічильник після очищення.
  condition:
  - condition: template
    value_template: '{{ trigger.from_state.state not in [''unknown'', ''unavailable'']
      }}'
    alias: Not from unknown or unavailable
  action:
  - service: script.announcement
    data:
      title: "Пилосос \U0001F9F9"
      openings: '{{ openings }}'
      messages: '{{ messages }}'
      notify_data:
        url: /lovelace/vacuum
        group: vacuum
        actions:
        - identifier: VACUUM_GO_TO_MAINTENANCE
          title: Обслужити
          activationMode: background
          destructive: true
        - identifier: VACUUM_RETURN_TO_BASE
          title: На базу
          activationMode: background
          destructive: true
      speak: false
    alias: Notify about replacements
- id: vacuum_ios_actions_handling
  alias: 'Vacuum: iOS Actions'
  description: Handle iOS actions for vacuum cleaner
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: VACUUM_START
    id: start
    alias: '"start" button pressed'
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: VACUUM_START_GENTLE
    id: start_gentle
    alias: '"start_gentle" button pressed'
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: VACUUM_PAUSE
    id: pause
    alias: '"pause" button pressed'
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: VACUUM_RETURN_TO_BASE
    id: return_to_base
    alias: '"return_to_base" button pressed'
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: VACUUM_GO_TO_MAINTENANCE
    id: go_to_maintenance
    alias: '"go_to_maintenance" button pressed'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: start
        alias: '"start" button pressed'
      sequence:
      - service: script.vacuum_regular_cleaning
        data: {}
    - conditions:
      - condition: trigger
        id: start_gentle
        alias: '"start_gentle" button pressed'
      sequence:
      - service: script.vacuum_gentle_cleaning
        data: {}
    - conditions:
      - condition: trigger
        id: pause
        alias: '"pause" button pressed'
      sequence:
      - service: vacuum.pause
        entity_id: vacuum.roborock
    - conditions:
      - condition: trigger
        id: return_to_base
        alias: '"return_to_base" button pressed'
      sequence:
      - service: vacuum.return_to_base
        entity_id: vacuum.roborock
    - conditions:
      - condition: trigger
        id: go_to_maintenance
        alias: '"go_to_maintenance" button pressed'
      sequence:
      - service: script.vacuum_maintenance
        data: {}
- id: '1664661503248'
  alias: 'Alert: Water is Heated'
  description: When we ask to let us know when the boiler has done heating, it should
    notify about that.
  trigger:
  - platform: state
    entity_id:
    - input_button.notify_water_heated
  condition: []
  action:
  - if:
    - condition: state
      entity_id: binary_sensor.heating_water
      state: 'off'
    - condition: state
      entity_id: switch.water_heater
      state: 'on'
    then:
    - service: script.announcement
      data:
        title: "Бойлер \U0001F6C1"
        messages:
        - Бойлер уже нагрітий.
        - Бойлер нагрітий.
        - Вода у бойлері вже тепла.
        notify_data:
          url: /localave/bathroom
    else:
    - service: switch.turn_on
      data: {}
      target:
        entity_id:
        - switch.water_heater
    - service: script.announcement
      data:
        title: "Бойлер \U0001F6C1"
        messages:
        - Вам прийде сповіщення, коли вода буде нагріта.
        - Ви отримаєте сповіщення, коли бойлер нагріє воду.
        notify_data:
          url: /localave/bathroom
        openings: {}
    - wait_for_trigger:
      - platform: state
        entity_id:
        - binary_sensor.heating_water
        from: 'on'
        to: 'off'
      continue_on_timeout: false
      timeout:
        hours: 4
        minutes: 0
        seconds: 0
        milliseconds: 0
    - service: script.announcement
      data:
        title: "Бойлер \U0001F6C1"
        messages:
        - Можна йти митись.
        - Можна йти у ванну.
        openings:
        - Воду нагріто.
        - Вола нагрілась.
        - Бойлер закінчив нагрівати воду.
        - Бойлер нагрів воду.
        notify_data:
          url: /localave/bathroom
  mode: restart
- id: '1668428030391'
  alias: 'System: Power Outage Recovery'
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: group.family
        state: not_home
      - condition: state
        entity_id: binary_sensor.sleeping_time
        state: 'on'
    then:
    - service: scene.turn_on
      target:
        entity_id: scene.lights_out
      metadata: {}
    else: []
    alias: Recover lights
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - if:
    - condition: state
      entity_id: binary_sensor.uptime_home_assistant
      state: unavailable
    - condition: state
      entity_id: binary_sensor.uptime_home_router
      state: unavailable
    - condition: state
      entity_id: weather.nyvky
      state: unavailable
    - condition: template
      value_template: '{% set last_recovery = as_timestamp(state_attr(''automation.hacs_releases_alert'',
        ''last_triggered''), 0) %}

        {% set current_recovery = as_timestamp(now(), 0) %}

        {{ current_recovery - last_recovery > 60 * 10 }}'
      alias: Ensure at least 10 min between restarts
    then:
    - service: shell_command.docker_restart
      data: {}
      alias: Perform Docker Restart via SSH
    alias: Perform full restart when server still has not Internet connection
  mode: single
- id: '1686063093337'
  alias: 'Climate: Turn on Humidifier only during sleep time'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.sleeping_time
  - platform: state
    entity_id:
    - binary_sensor.air_humidifier_water_tank
    from: 'off'
    to: 'on'
  condition: []
  action:
  - if:
    - condition: state
      entity_id: binary_sensor.sleeping_time
      state: 'on'
    - condition: state
      entity_id: group.family
      state: home
    then:
    - alias: Turn on Air Humidifier
      service: humidifier.turn_on
      data: {}
      target:
        device_id: 0166e2ff4273cd202346ea34f12cb10c
    - service: switch.turn_off
      data: {}
      target:
        entity_id:
        - switch.air_humidifier_buzzer
        - switch.air_humidifier_led
    else:
    - service: humidifier.turn_off
      data: {}
      target:
        device_id: 0166e2ff4273cd202346ea34f12cb10c
  mode: single
- id: '1689770347035'
  alias: 'Climate: Suggest turning on AC when it''s hot'
  description: When temperature raises over certain level, send an actionable notification
    for turning on ACs
  trigger:
  - platform: numeric_state
    entity_id: sensor.home_temperature
    above: 26.5
  - platform: numeric_state
    entity_id: climate.living_room_ac
    above: 26.5
  - platform: numeric_state
    entity_id: climate.bedroom_ac
    above: 26.5
  condition:
  - condition: state
    entity_id: group.family
    state: home
  - condition: state
    entity_id:
    - climate.bedroom_ac
    - climate.living_room_ac
    state: 'off'
  action:
  - variables:
      turn_on_both: '{{ ''TURN_ON_BOTH'' ~ context.id }}'
      turn_on_living_room: '{{ ''TURN_ON_LIVING_ROOM'' ~ context.id }}'
      turn_on_bedroom: '{{ ''TURN_ON_HOME_BEDROOM'' ~ context.id }}'
    alias: Define action for notification
  - service: script.announcement
    data:
      title: "Кондиціонер \U0001F975"
      speak: false
      openings:
      - Вдома занадто жарко.
      - Температура вдома зростає.
      - Вдома жарко.
      messages:
      - Увімкнути кондиціонери?
      - Охолодити дім?
      - Включити кондиціонери?
      - Натисніть, щоб включити кондиціонери.
      notify_data:
        tag: ac
        actions:
        - action: '{{ turn_on_home }}'
          title: Увімкнути обидва
          activationMode: background
          authenticationRequired: true
        - action: '{{ turn_on_living_room }}'
          title: Увімкнути у вітальні
          activationMode: background
          authenticationRequired: true
        - action: '{{ turn_on_bedroom }}'
          title: Увімкнути у спальні
          activationMode: background
          authenticationRequired: true
        url: /lovelace/living_room
    alias: Suggest turning on AC
  - wait_for_trigger:
    - id: both
      platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: '{{ turn_on_both }}'
      alias: Turn on both AC
    - id: living_room
      platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: '{{ turn_on_living_room }}'
      alias: Turn on Living Room AC
    - id: bedroom
      platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: '{{ turn_on_bedroom }}'
      alias: Turn on Bedroom AC
    timeout:
      hours: 2
      minutes: 0
      seconds: 0
      milliseconds: 0
    alias: Wait for click on action
  - choose:
    - conditions:
      - alias: Turn on Both ACs
        condition: template
        value_template: '{{ wait.trigger.id == ''both'' }}'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: heat_cool
        target:
          entity_id:
          - climate.living_room_ac
          - climate.bedroom_ac
        alias: Turn on Both AC to Auto
    - conditions:
      - alias: Turn on Living Room AC
        condition: template
        value_template: '{{ wait.trigger.id == ''living_room'' }}'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: heat_cool
        target:
          entity_id:
          - climate.living_room_ac
        alias: Turn on Living Room AC to Auto
    - conditions:
      - alias: Turn on Bedroom AC
        condition: template
        value_template: '{{ wait.trigger.id == ''bedroom'' }}'
      sequence:
      - service: climate.set_hvac_mode
        data:
          hvac_mode: heat_cool
        target:
          entity_id:
          - climate.bedroom_ac
        alias: Turn on Living Room AC to Auto
  - service: notify.all
    data:
      message: clear_notification
      data:
        tag: ac
    alias: Clear AC notifications
  mode: single
- &id001
  id: '1690033816305'
  alias: 'Media: Turn on Apple TV when Samsung TV turns on'
  description: Turn on Apple TV when Samsung TV turns on and PS5 is off
  trigger:
  - platform: state
    entity_id:
    - media_player.samsung_tv
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: media_player.playstation_5
    state: none
  - condition: state
    entity_id: media_player.apple_tv
    state: standby
  action:
  - service: media_player.turn_on
    data: {}
    target:
      entity_id: media_player.apple_tv
  mode: single
- *id001
- id: '1697924263869'
  alias: 'Water: Keep Water Heater turned On'
  description: When Water Heater was accidentally turned off, automatically turn in
    on
  trigger:
  - type: turned_off
    platform: device
    device_id: 48afd1fe27fd6821024137edf3db83b8
    entity_id: 3a9e2dac0e131e9ba4188d262e983051
    domain: binary_sensor
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition:
  - condition: state
    entity_id: group.family
    state: home
  - condition: state
    entity_id: input_boolean.away
    state: 'off'
  action:
  - type: turn_on
    device_id: 48afd1fe27fd6821024137edf3db83b8
    entity_id: be5073a0736345a2cc65a9aa9f6b53ba
    domain: switch
  mode: single
- id: '1700772888411'
  alias: 'Media: Plex item added'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.smart_home_library_films
    - sensor.smart_home_library_series
  condition:
  - condition: template
    value_template: '{{ trigger.from_state.state | int < trigger.to_state.state |
      int }}'
    alias: Only for added items
  action:
  - service: script.announcement
    data:
      speak: false
      notify: true
      service: notify.denys
      title: Plex
      messages:
      - '[object Object]':
  mode: single
